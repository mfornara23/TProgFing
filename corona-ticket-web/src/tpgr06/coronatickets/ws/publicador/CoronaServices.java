
package tpgr06.coronatickets.ws.publicador;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CoronaServices", targetNamespace = "http://publicador.ws.coronatickets.tpgr06/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CoronaServices {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/loginRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/loginResponse")
    public boolean login(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        boolean arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataFuncion
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarFuncionesByEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarFuncionesByEspectaculoResponse")
    public DataFuncion listarFuncionesByEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataFuncion
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarFuncionesByEspectadorRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarFuncionesByEspectadorResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarFuncionesByEspectador/Fault/NotFoundException")
    })
    public DataFuncion listarFuncionesByEspectador(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPaquetesByEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPaquetesByEspectaculoResponse")
    public DataPaquete listarPaquetesByEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.FuncionDTO
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getFuncionEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getFuncionEspectaculoResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getFuncionEspectaculo/Fault/NotFoundException")
    })
    public FuncionDTO getFuncionEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/actualizarUsuarioRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/actualizarUsuarioResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/actualizarUsuario/Fault/NotFoundException")
    })
    public void actualizarUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        UsuarioDTO arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataCategoria
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarCategoriasByPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarCategoriasByPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarCategoriasByPaquete/Fault/NotFoundException")
    })
    public DataCategoria listarCategoriasByPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/desmarcarFavoritoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/desmarcarFavoritoResponse")
    public void desmarcarFavorito(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosNoEnPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosNoEnPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosNoEnPaquete/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculosNoEnPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/valorarEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/valorarEspectaculoResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/valorarEspectaculo/Fault/NotFoundException")
    })
    public void valorarEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/dejarSeguirUsuarioRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/dejarSeguirUsuarioResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/dejarSeguirUsuario/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/dejarSeguirUsuario/Fault/BadRequestException")
    })
    public void dejarSeguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosParaValorarRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosParaValorarResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosParaValorar/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculosParaValorar(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.UsuarioDTO
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getUsuarioByNicknameRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getUsuarioByNicknameResponse")
    public UsuarioDTO getUsuarioByNickname(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.RegistroFuncionDTO
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionPaquete/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionPaquete/Fault/BadRequestException")
    })
    public RegistroFuncionDTO registroFuncionPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/finalizarEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/finalizarEspectaculoResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/finalizarEspectaculo/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/finalizarEspectaculo/Fault/BadRequestException")
    })
    public void finalizarEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataPlataforma
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPlataformasRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPlataformasResponse")
    public DataPlataforma listarPlataformas();

    /**
     * 
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosAceptadosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosAceptadosResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosAceptados/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculosAceptados()
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosFinalizadosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosFinalizadosResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosFinalizados/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculosFinalizados(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculos/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosByArtistaRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosByArtistaResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarEspectaculosByArtista/Fault/NotFoundException")
    })
    public DataEspectaculo listarEspectaculosByArtista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/agregarEspectaculoAPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/agregarEspectaculoAPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/agregarEspectaculoAPaquete/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/agregarEspectaculoAPaquete/Fault/BadRequestException")
    })
    public void agregarEspectaculoAPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.UsuarioDTO
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getUsuarioByEmailRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getUsuarioByEmailResponse")
    public UsuarioDTO getUsuarioByEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataEspectaculo
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/buscarEspectaculosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/buscarEspectaculosResponse")
    public DataEspectaculo buscarEspectaculos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.EspectaculoDTO
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaEspectaculoResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaEspectaculo/Fault/NotFoundException")
    })
    public EspectaculoDTO consultaEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaFuncionRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaFuncionResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaFuncion/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaFuncion/Fault/BadRequestException")
    })
    public void altaFuncion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", partName = "arg4")
        StringListWrapper arg4,
        @WebParam(name = "arg5", partName = "arg5")
        XMLGregorianCalendar arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg13
     * @param arg14
     * @param arg1
     * @param arg0
     * @param arg10
     * @param arg11
     * @param arg12
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaEspectaculoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaEspectaculoResponse", fault = {
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaEspectaculo/Fault/BadRequestException"),
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaEspectaculo/Fault/NotFoundException")
    })
    public void altaEspectaculo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        XMLGregorianCalendar arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        StringListWrapper arg10,
        @WebParam(name = "arg11", partName = "arg11")
        String arg11,
        @WebParam(name = "arg12", partName = "arg12")
        String arg12,
        @WebParam(name = "arg13", partName = "arg13")
        int arg13,
        @WebParam(name = "arg14", partName = "arg14")
        String arg14)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataCategoria
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarCategoriasRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarCategoriasResponse")
    public DataCategoria listarCategorias();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg7
     * @param arg6
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.RegistroFuncionDTO
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncionResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncion/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/registroFuncion/Fault/BadRequestException")
    })
    public RegistroFuncionDTO registroFuncion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/compraPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/compraPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/compraPaquete/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/compraPaquete/Fault/BadRequestException")
    })
    public void compraPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaUsuarioRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaUsuarioResponse", fault = {
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaUsuario/Fault/BadRequestException")
    })
    public void altaUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        UsuarioDTO arg0)
        throws BadRequestException_Exception
    ;

    /**
     * 
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarUsuariosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarUsuariosResponse")
    public DataUsuario listarUsuarios();

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/buscarPaquetesRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/buscarPaquetesResponse")
    public DataPaquete buscarPaquetes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/seguirUsuarioRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/seguirUsuarioResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/seguirUsuario/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/seguirUsuario/Fault/BadRequestException")
    })
    public void seguirUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.PremioDTO
     * @throws NotFoundException_Exception
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/sortearPremiosRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/sortearPremiosResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/sortearPremios/Fault/NotFoundException"),
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/sortearPremios/Fault/BadRequestException")
    })
    public PremioDTO sortearPremios(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws BadRequestException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @throws BadRequestException_Exception
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaPaqueteResponse", fault = {
        @FaultAction(className = BadRequestException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/altaPaquete/Fault/BadRequestException")
    })
    public void altaPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws BadRequestException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/logoutRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/logoutResponse")
    public boolean logout(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.DataPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPaquetesRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/listarPaquetesResponse")
    public DataPaquete listarPaquetes();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/marcarFavoritoRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/marcarFavoritoResponse")
    public void marcarFavorito(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.UsuarioAuthDTO
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getAuthTokenRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/getAuthTokenResponse")
    public UsuarioAuthDTO getAuthToken(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/updateTokenRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/updateTokenResponse")
    public void updateToken(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns tpgr06.coronatickets.ws.publicador.PaqueteDTO
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaPaqueteRequest", output = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaPaqueteResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://publicador.ws.coronatickets.tpgr06/CoronaServices/consultaPaquete/Fault/NotFoundException")
    })
    public PaqueteDTO consultaPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundException_Exception
    ;

}
